<?xml version="1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">

  <title>Tiger Compiler Design</title>

  <para>Tiger is an experimental compiler used to explore certain aspects of compiler
    construction using a functional language. The intent is to transfer lessons learned from the
    Tiger experiment into Augusta.</para>

  <para>The Tiger language and compiler is described in the book <link
      xlink:href="http://www.amazon.com/Modern-Compiler-Implementation-Andrew-Appel/dp/0521607647/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1325343635&amp;sr=1-1"
      >Modern Compiler Implementation in ML</link> (which we call "MCI" throughout this
    documentation) by Andrew W. Appel. The author asks the reader develop a compiler for Tiger
    as an exercise. The implementation here follows the author's sketch using Scala as the
    implementation language rather than ML. Some of the related exercises are also solved here
    using Scala.</para>

  <para>However, our implementation of Tiger, besides being in Scala, is also used as a testbed
    for various ideas pertaining to compiler construction in functional languages. Thus certain
    aspects of the design are "adjusted" relative to the description in MCI to serve our greater
    goals. In this document we describe those adjustments, the results of our experiments with
    Tiger, and how those results impact the design and implementation of Augusta.</para>

  <para>We also use Tiger as a way of exploring our chosen back end technology. Thus instead of
    implementing the low level optimizations described in MCI, we instead connect the Tiger
    front end to LLVM. This experiment is intended to help pave the way for doing the same thing
    with the (more complex) Augusta front end.</para>

  <para>Finally we also believe the Tiger project has the potential to become something useful
    on its own. Students and instructors using the Appel text in a compiler course might find
    our Scala implementation interesting. Thus Tiger could also be a way of attracting attention
    to Augusta from a wider academic audience.</para>

</chapter>
