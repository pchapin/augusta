<?xml version="1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">

  <title>Building Augusta</title>

  <para>This chapter describes how to build Augusta and its associated documentation and how to
    run the tests. We also describe various issues related to the tool chain in general, such as
    setting up a continuous integration server and the use of style tools and advanced static
    analysis tools. This chapter is intended for Augusta contributors or power users who wish to
    build the system from the source code repository. If you are using a binary distribution you
    can skip this section entirely.</para>

  <para>The README at the top level of the Augusta source tree gives a summary of the steps
    included here. The README is intended as a kind of "quick start" document. The information
    here is a more detailed version of the information in the top level README.</para>

  <para>The tools with specific version numbers shown below are the official tools used by the
    Augusta contributors. Other tools (or other versions of the same tools) may also work.
    Obviously the greater the differences between the tools you attempt to use and those listed
    below, the more problems you are likely to encounter.</para>

  <para>Augusta uses a number of libraries. Currently <link
      xlink:href="http://www.scala-sbt.org/">SBT</link>, our primary build tool, is used to
    download the libraries. The <filename>lib</filename> folder holds library jar files that are
    not downloaded via SBT. Although there are currently no libraries that are not managed by
    SBT, the folder exists as a placeholder for future use.</para>

  <variablelist>
    <title>Build Tools</title>

    <varlistentry>
      <term><link
          xlink:href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java
          Development Kit</link></term>
      <listitem>
        <para>We use JDK v11.x.y. If you use a different JDK than for Java 11, you will have to
          adjust the IntelliJ project definition. A full JDK is necessary, and not just a JRE,
          because the Augusta code base includes some Java files.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://www.scala-lang.org/">Scala Compiler</link></term>
      <listitem>
        <para>We use Scala v2.12.8. The Scala compiler is executed indirectly via SBT. You do
          not need to download and install it separately, although you might find it useful to
          have a separate installation available.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://www.docbook.org/">DocBook</link></term>
      <listitem>
        <para>The Augusta documentation is written primarily in DocBook. This is an XML format
          and so is readable (and writable) in an ordinary text editor. However, if you want to
          build nicely formatted documentation or benefit from a more advanced editing features,
          you will need a tool chain for processing DocBook. We currently use <link
            xlink:href="http://oxygenxml.com/">&lt;oXygen/&gt;</link> as our primary DocBook
          editing tool.</para>

        <para>IntelliJ can also edit DocBook using its general support for XML. Emacs's nXML
          mode is also useful. To set up IntelliJ for DocBook first download and unpack the
          DocBook 5.1 RelaxNG schema and set up IntelliJ as described below.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://www.jetbrains.com/idea/">IntelliJ IDEA</link></term>
      <listitem>
        <para>Officially we use IntelliJ IDEA, Community Edition, version 2018.3.5 with the
          IntelliJ Scala plugin developed by JetBrains as our integrated development
          environment. The plugin can be installed from inside IntelliJ once the main IDE is
          installed. Some of us use the Ultimate edition of IntelliJ with no problems.</para>

        <para>Unofficially some of us use the Ultimate edition of IntelliJ IDEA. It is also
          entirely feasible to do Augusta development without an IDE and use instead just a text
          editor and the SBT command console.</para>

        <para>In addition you might consider configuring a path variables in IntelliJ. It is
          DOCBOOK_XML and it should point at the folder containing your DocBook schema. It is
          used by IntelliJ's DocBook editor to locate the schema so it can do validation.</para>

        <para>We also recommend installing the ANTLR v4 grammar plugin and the Markdown editing
          plugin from the IntelliJ plugin repository. While not required, these plugins can make
          editing some of the supporting files and documents more pleasant.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://llvm.org">LLVM</link></term>
      <listitem>
        <para>Augusta uses the LLVM v7.0.1 compiler back-end framework as a target for its code
          generator. Only the back-end tools are needed. Setting up LLVM is outside the current
          scope of this document; see the LLVM web site for more information. <emphasis>TODO:
            Describe how to set up LLVM.</emphasis></para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://www.adacore.com/community">GNAT Community
        2018</link></term>
      <listitem>
        <para>Currently the Augusta runtime system is compiled with the GNAT Ada compiler. This
          is necessary because Augusta is not yet mature enough to compile its runtime
          system.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><link xlink:href="http://jenkins-ci.org/">Jenkins</link></term>
      <listitem>
        <para>We use Jenkins as our continuous integration system. Our practice is to run
          Jenkins from the <link xlink:href="http://glassfish.java.net/">Glassfish</link>
          application server. You do not need to set up Jenkins if you are a single developer.
            <emphasis>TODO: Give more details about setting up Glassfish and
          Jenkins.</emphasis></para>
      </listitem>
    </varlistentry>

  </variablelist>

  <para>In addition to the tools above we may in the future make use of various additional tools
    to improve the quality of the Augusta code base. These tools might include, for example,
      <link xlink:href="http://babelfish.arc.nasa.gov/trac/jpf">Java Pathfinder</link>, <link
      xlink:href="http://libre.adacore.com/libre/tools/spark-gpl-edition/">SPARK</link>, and
      <link xlink:href="https://github.com/mdr/scalariform">Scalariform</link>. More information
    will be provided about setting up these tools when (and if) they are employed.</para>

  <para>You can use IntelliJ's integrated Git support to check out the Augusta project from
      <link xlink:href="https://github.com/pchapin/augusta.git"/>. You can then use SBT, either
    inside or outside of IntelliJ to do a full build of the project.</para>

  <para><emphasis>TODO: Say something about testing!</emphasis></para>

</chapter>
